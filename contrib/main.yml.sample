# s3_config_bucket is the S3 bucket that this cluster should use
# to store its cluster config data. This data contains cluster
# secrets, so access to this bucket must be restricted to those
# that NEED to use klondike to manage this cluster. This bucket
# does not need to be unique to this cluster, as klondike will
# use a namespace when placing objects in S3.
s3_config_bucket:

# aws_region is the AWS region in which the cluster will be deployed.
aws_region:

# aws_availability_zone is the AWS availability zone the cluster
# will be deployed in. This must be within the AWS region indicated
# by aws_region. For example, if aws_region were us-west-2, usable
# availablility zones include us-west-2a, us-west-2b and us-west-2c.
aws_availability_zone:

# coreos_image_id is the AMI ID used to deploy both controller
# and worker EC2 instances. This AMI must be available in the region
# indicated by aws_region. Use the public manifest of CoreOS AMIs
# at https://coreos.com/os/docs/latest/booting-on-ec2.html. Select
# the "Alpha Channel" tab in the image selector, identify the image
# available in your region, then copy the AMI ID for the HVM AMI type
# pasting it below.
coreos_image_id:

# ubuntu_image_id is the AMI ID used to deploy bastion EC2 instances.
# Navigate to https://cloud-images.ubuntu.com/locator/ec2/ and search
# for "16.04 hvm:instance-store". Identify the AMI available in your
# region, copy the AMI ID and paste it below.
ubuntu_image_id:

# aws_hosted_zone is a DNS zone delegated to AWS Route 53 the
# to which the deployer has the ability to add records. This
# zone will be used to provide a publicly-routable DNS name
# for the Kubernetes API.
aws_hosted_zone:

# external_fqdn defines a DNS name the the deployer wishes to make
# routable to the Kubernetes.
external_fqdn: "{{ cluster }}.kubernetes.{{ aws_hosted_zone }}"

# bastion_instance_type is the instance type used when deploying
# EC2 instances as bastions in your cluster. This instance is an
# administrative host, so it does not need a large amount of storage
# or compute resources.
bastion_instance_type: m3.medium

# controller_instance_type is the instance type used when deploying
# EC2 instances for the Kubernetes control plane.
controller_instance_type: m3.large

# controller_instance_count is the number of instances to deploy
# for the initial Kubernetes control plane. 3 is recommended.
controller_instance_count: 3

# worker_instance_type is the instance type used when deploying
# EC2 instances for the Kubernetes worker pool. These instances
# must support the EBS-optimized boot flag (e.g. c4-level instances).
worker_instance_type: c4.large

# worker_instance_count is the number of instances to deploy
# for the initial Kubernetes worker pool. Increasing this number
# increases the amount of resources available for pods.
worker_instance_count: 3

# cluster_pod_network_cidr defines the range of IPs to use for
# the kubernetes pod network. These IPs must not conflict with
# the host- or service-level networking.
cluster_pod_network_cidr: 10.1.0.0/16

# cluster_service_network_cidr defines the range of IPs to use for
# the kubernetes service network. These IPs must not conflict
# with the host- or pod-level networking.
cluster_service_network_cidr: 10.255.0.0/16

# cluster_service_kubernetes_ip is the service network IP that will
# automatically be assigned to the "kubernetes" service created by
# the cluster in the "default" namespace. This IP must be the first
# IP in the network defined by cluster_service_network_cidr.
cluster_service_kubernetes_ip: 10.255.0.1

# cluster_service_dns_ip is the service network IP address used by
# the DNS addon. This must be within the cluster_service_ip_range.
cluster_service_dns_ip: 10.255.0.10

# cluster_service_dns_zone is the DNS zone used by the DNS addon. For
# example, if "cluster.local" is used here, the default Kubernetes
# service will be available at "kubernetes.default.svc.cluster.local".
cluster_service_dns_zone: cluster.local

# datadog_enabled controls whether or not the DataDog agent should be
# deployed across the cluster. If true, datadog_api_key must be set.
datadog_enabled: false

# datadog_api_key is the API key that the DataDog agent will use to
# push metrics about the Kubernetes cluster to the DataDog service.
# Only used if datadog_enabled is true.
#datadog_api_key:

# logstash_enabled controls whether or not log data is collected and
# forwarded via logstash to an elasticsearch cluster. If true,
# logstash_elasticsearch_host must be set.
logstash_enabled: false

# logstash_elasticsearch_host is the host:port representing an
# elasticsearch cluster where logstash should send its logs.
# Only used if logstash_enabled is true.
#logstash_elasticsearch_host:
