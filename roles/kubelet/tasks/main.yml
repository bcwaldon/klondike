- name: create directories
  file: path={{ item }} state=directory
  sudo: true
  with_items:
  - /etc/systemd/system/docker.service.d
  - /etc/kubernetes/manifests
  - /etc/logstash

- name: set iptables pod networking rule
  iptables: table=nat chain=POSTROUTING jump=MASQUERADE source={{ cluster_pod_network_cidr }}
  when: kubelet_enable_pod_networking
  sudo: true

- name: set DOCKER_OPTS
  template: src=10-docker-opts.conf dest=/etc/systemd/system/docker.service.d/10-docker-opts.conf mode=0644
  sudo: true
  notify:
  - daemon-reload
  - restart docker.service

- name: upload kube-proxy pod
  template: src=kube-proxy.yml.j2 dest=/etc/kubernetes/manifests/kube-proxy.yml mode=0644
  sudo: true

- name: upload kubelet.env
  template: src=kubelet.env.j2 dest=/etc/kubernetes/kubelet.env mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload cluster CA certificate
  copy: content={{ pki_ca_cert }} dest=/etc/kubernetes/ca.pem mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload kubeconfig
  when: apiserver_client_tls_enabled
  template: src=kubeconfig.j2 dest=/etc/kubernetes/kubeconfig mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload kubelet TLS certificate
  when: apiserver_client_tls_enabled
  copy: content={{ pki_clients[apiserver_client_tls_client_name].cert }} dest=/etc/kubernetes/kubelet.pem mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload kubelet key
  when: apiserver_client_tls_enabled
  copy: content={{ pki_clients[apiserver_client_tls_client_name].key }} dest=/etc/kubernetes/kubelet-key.pem mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload kubelet.service
  copy: src=kubelet.service dest=/etc/systemd/system/kubelet.service mode=0644
  sudo: true
  notify:
  - daemon-reload
  - restart kubelet.service

- name: kubelet.service started
  service: name=kubelet.service state=started
  sudo: true

- name: deploy logstash
  when: logstash_enabled
  template: src={{ item.src }}.j2 dest={{ item.dest }}/{{ item.src }} mode=0644
  sudo: true
  with_items:
  - src: "logstash.yml"
    dest: "/etc/kubernetes/manifests"
  - src: "logstash.conf"
    dest: "/etc/logstash"

- name: deploy datadog
  when: datadog_enabled
  template: src={{ item.src }}.j2 dest={{ item.dest }}/{{ item.src }} mode=0644
  sudo: true
  with_items:
  - src: "datadog.yml"
    dest: "/etc/kubernetes/manifests"
