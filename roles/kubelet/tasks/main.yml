#
# Copyright 2016 Planet Labs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
- name: create directories
  file: path={{ item }} state=directory
  sudo: true
  with_items:
  - /etc/systemd/system/docker.service.d
  - /etc/kubernetes/manifests

- name: set iptables pod networking rule
  iptables: table=nat chain=POSTROUTING jump=MASQUERADE source={{ cluster_pod_network_cidr }}
  when: kubelet_enable_pod_networking
  sudo: true

- name: set DOCKER_OPTS
  template: src=docker.conf.j2 dest=/etc/systemd/system/docker.service.d/10-kubernetes.conf mode=0644
  sudo: true
  notify:
  - daemon-reload
  - restart docker.service

- name: upload kube-proxy pod
  template: src=kube-proxy.yml.j2 dest=/etc/kubernetes/manifests/kube-proxy.yml mode=0644
  when: kubelet_enable_pod_proxy
  sudo: true

- name: upload kubelet.env
  template: src=kubelet.env.j2 dest=/etc/kubernetes/kubelet.env mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload cluster CA certificate
  copy: content={{ pki_ca_cert }} dest=/etc/kubernetes/ca.pem mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: check for TLS cert
  stat: path=/etc/kubernetes/kubelet.pem
  register: cmd

- name: generate TLS cert
  include: tls.yml
  when: apiserver_client_tls_enabled and not cmd.stat.exists

- name: upload kubeconfig
  when: apiserver_client_tls_enabled
  template: src=kubeconfig.j2 dest=/etc/kubernetes/kubeconfig mode=0644
  sudo: true
  notify:
  - restart kubelet.service

- name: upload kubelet.service
  copy: src=kubelet.service dest=/etc/systemd/system/kubelet.service mode=0644
  sudo: true
  notify:
  - daemon-reload
  - restart kubelet.service

- name: kubelet.service started
  service: name=kubelet.service state=started enabled=yes
  sudo: true

- name: docker.socket started
  service: name=docker.socket state=started enabled=yes
  sudo: true

- name: deploy datadog
  when: datadog_enabled
  template: src={{ item.src }}.j2 dest={{ item.dest }}/{{ item.src }} mode=0644
  sudo: true
  with_items:
  - src: "datadog.yml"
    dest: "/etc/kubernetes/manifests"

- name: deploy logspout
  when: logspout_enabled
  template: src={{ item.src }}.j2 dest={{ item.dest }}/{{ item.src }} mode=0644
  sudo: true
  with_items:
  - src: "logspout.yml"
    dest: "/etc/kubernetes/manifests"
