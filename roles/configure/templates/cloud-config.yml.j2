#cloud-config

ssh_authorized_keys:
- "{{ deploy_key }}"

coreos:

  update:
    reboot-strategy: "off"

  units:
    - name: format-xvdb.service
      command: start
      content: |
        [Unit]
        Description=Format /dev/xvdb as ext4
        After=dev-xvdb.device
        Requires=dev-xvdb.device
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/xvdb
        ExecStart=/usr/sbin/mkfs.ext4 -F /dev/xvdb
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount /dev/xvdb to /var/lib/docker
        Requires=format-xvdb.service
        After=format-xvdb.service
        [Mount]
        What=/dev/xvdb
        Where=/var/lib/docker
        Type=ext4
    - name: docker.service
      drop-ins:
        - name: 10-mount-var-lib-docker.conf
          content: |
            [Unit]
            After=var-lib-docker.mount
            Requires=var-lib-docker.mount
    - name: iptables-store.service
      enable: true
    - name: iptables-restore.service
      enable: true

    - name: generate-kubelet-key-and-csr.service
      command: start
      content: |
        [Unit]
        ConditionPathExists=!/etc/kubernetes/kubelet-csr.pem
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'openssl genrsa -out /etc/kubernetes/kubelet-key.pem 2048'
        ExecStart=/bin/bash -c 'IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4) openssl req -new -key /etc/kubernetes/kubelet-key.pem -out /etc/kubernetes/kubelet-csr.pem -subj "/CN=kubelet" -config /etc/kubernetes/openssl.cnf'

write_files:
- path: /etc/kubernetes/openssl.cnf
  content: |
    [req]
    req_extensions = v3_req
    distinguished_name = req_distinguished_name
    [req_distinguished_name]
    [ v3_req ]
    basicConstraints = CA:FALSE
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    subjectAltName = @alt_names
    [alt_names]
    IP.1 = $ENV::IP
