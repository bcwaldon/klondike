#!/bin/bash -e

[[ "$OSTYPE" = "linux-gnu" ]] && BASE64ARGS="-w0" 

USER_DATA=$(cat {{ cluster_dir }}/cloud-config.yml | base64 $BASE64ARGS)
BASTION_USER_DATA=$(cat {{ cluster_dir }}/bastion-cloud-config.yml | base64 $BASE64ARGS)
AGGREGATOR_USER_DATA=$(cat {{ cluster_dir }}/aggregator-cloud-config.yml | base64 $BASE64ARGS)

PARAMETERS=( 
	"ParameterKey=PeerVPC,ParameterValue={{ peer_vpc_id }}"
	"ParameterKey=PeerNetworkCIDR,ParameterValue={{ peer_network_cidr }}"
	"ParameterKey=PeerConnectionID,ParameterValue={{ peer_connection_id }}"
	"ParameterKey=ClusterVPC,ParameterValue={{ cluster_vpc_id }}"
	"ParameterKey=ClusterInternetGateway,ParameterValue={{ cluster_vpc_internet_gateway_id }}"
	"ParameterKey=ClusterNetworkCIDR,ParameterValue={{ cluster_instance_network_cidr }}"
	"ParameterKey=ClusterVPNGateway,ParameterValue={{ cluster_vpn_gateway_id }}"
	"ParameterKey=PublicSubnetCIDR,ParameterValue={{ public_instance_subnet_cidr }}"
	"ParameterKey=ControllerSubnetCIDR,ParameterValue={{ controller_instance_subnet_cidr }}"
	"ParameterKey=WorkerSubnetCIDR,ParameterValue={{ worker_instance_subnet_cidr }}"
	"ParameterKey=AvailabilityZone,ParameterValue={{ aws_availability_zone }}"
	"ParameterKey=GatewayInstanceType,ParameterValue={{ gateway_instance_type }}"
	"ParameterKey=GatewayInstanceCount,ParameterValue={{ gateway_instance_count }}"
	"ParameterKey=GatewayInstanceRootDiskSize,ParameterValue={{ gateway_instance_root_disk_size_gb }}"
	"ParameterKey=ControllerInstanceType,ParameterValue={{ controller_instance_type }}"
	"ParameterKey=ControllerInstanceCount,ParameterValue={{ controller_instance_count }}"
	"ParameterKey=ControllerInstanceRootDiskSize,ParameterValue={{ controller_instance_root_disk_size_gb }}"
	"ParameterKey=WorkerInstanceType,ParameterValue={{ worker_instance_type }}"
	"ParameterKey=WorkerInstanceCount,ParameterValue={{ worker_instance_count }}"
	"ParameterKey=WorkerInstanceRootDiskSize,ParameterValue={{ worker_instance_root_disk_size_gb }}"
	"ParameterKey=WorkerInstanceRootDiskIOPs,ParameterValue={{ worker_instance_root_disk_size_gb * 30 }}"
	"ParameterKey=BastionInstanceType,ParameterValue={{ bastion_instance_type }}"
	"ParameterKey=BastionInstanceRootDiskSize,ParameterValue={{ bastion_instance_root_disk_size_gb }}"
	"ParameterKey=AggregatorInstanceType,ParameterValue={{ aggregator_instance_type }}"
	"ParameterKey=AggregatorInstanceRootDiskSize,ParameterValue={{ aggregator_instance_root_disk_size_gb }}"
	"ParameterKey=CoreOSImageID,ParameterValue={{ coreos_image_id }}"
	"ParameterKey=UbuntuImageID,ParameterValue={{ ubuntu_image_id }}"
	"ParameterKey=ClusterName,ParameterValue={{ cluster }}"
	"ParameterKey=HostedZone,ParameterValue={{ aws_hosted_zone }}"
	"ParameterKey=S3ConfigBucket,ParameterValue={{ s3_config_bucket }}"
	"ParameterKey=GatewayUserData,ParameterValue=$USER_DATA"
	"ParameterKey=ControllerUserData,ParameterValue=$USER_DATA"
	"ParameterKey=WorkerUserData,ParameterValue=$USER_DATA"
	"ParameterKey=BastionUserData,ParameterValue=$BASTION_USER_DATA"
	"ParameterKey=AggregatorUserData,ParameterValue=$AGGREGATOR_USER_DATA"
)

function join { local IFS="$1"; shift; echo "$*"; }

aws cloudformation create-stack \
	--stack-name klondike-cluster-{{ cluster }} \
	--capabilities CAPABILITY_IAM \
	--parameters $(join " " "${PARAMETERS[@]}") \
	--disable-rollback \
	--template-url https://s3.amazonaws.com/{{ s3_config_bucket }}/stack-template.json
